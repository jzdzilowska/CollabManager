{"ast":null,"code":"var _jsxFileName = \"/Users/zdzilowska/Desktop/university/year 2/cs0320/term-project-rdbrooks-meball-jzdzilow-sridley/front/src/components/RoleSelection.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/RoleSelection.css\";\nimport { useRecoilState } from \"recoil\";\nimport { UserRole, userSessionState } from \"../recoil/atoms\";\n\n// adds debugging partner to queue on backend\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction addUserToQueue(email, name) {\n  return fetch(\"http://localhost:3333/addDebuggingPartner?name=\" + name + \"&email=\" + email).then(response => response.json()).then(data => {\n    return data[\"result\"];\n  }).catch(e => {\n    return \"ERROR: \" + e;\n  });\n}\nconst RoleSelection = () => {\n  _s();\n  var _userSession$user;\n  const navigate = useNavigate();\n  const [userSession, setUserSession] = useRecoilState(userSessionState);\n\n  // if no user then go to login page\n  useEffect(() => {\n    if (userSession.user === null) {\n      setUserSession({\n        user: null,\n        role: UserRole.NoneSelected,\n        time: null\n      });\n      navigate(\"/login\");\n    }\n  }, [userSession.user]);\n\n  // student selects type of role\n  const handleRoleSelection = role => {\n    setUserSession({\n      user: userSession.user,\n      role: role,\n      time: new Date()\n    });\n    navigate(\"/dashboard\");\n    // will only get to role selection page if session started, thus do not need to check again\n    if (role === UserRole.DebuggingPartner) {\n      if (userSession.user) {\n        addUserToQueue(userSession.user.email, userSession.user.name);\n      }\n      navigate(\"/dashboard\");\n    } else if (role === UserRole.HelpRequester) {\n      // if help requester must also select type of issue (created based on user research)\n      navigate(\"/issue-type-selection\");\n      console.log(\"ROLE\" + userSession.role + \"USER \" + userSession.user);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"role-body\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"role-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome, \", (_userSession$user = userSession.user) === null || _userSession$user === void 0 ? void 0 : _userSession$user.name, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please select your role:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleRoleSelection(UserRole.HelpRequester),\n        className: \"btn\",\n        children: \"Help Requester\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleRoleSelection(UserRole.DebuggingPartner),\n        className: \"btn\",\n        children: \"Debugging Partner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn2\",\n        onClick: () => {\n          setUserSession({\n            user: null,\n            role: UserRole.NoneSelected,\n            time: null\n          });\n          navigate(\"/login\");\n        },\n        children: \"Back to Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(RoleSelection, \"qvKbQfkaE0F2azxeTt69INHA+5s=\", false, function () {\n  return [useNavigate, useRecoilState];\n});\n_c = RoleSelection;\nexport default RoleSelection;\nvar _c;\n$RefreshReg$(_c, \"RoleSelection\");","map":{"version":3,"names":["React","useEffect","useNavigate","useRecoilState","UserRole","userSessionState","jsxDEV","_jsxDEV","addUserToQueue","email","name","fetch","then","response","json","data","catch","e","RoleSelection","_s","_userSession$user","navigate","userSession","setUserSession","user","role","NoneSelected","time","handleRoleSelection","Date","DebuggingPartner","HelpRequester","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/zdzilowska/Desktop/university/year 2/cs0320/term-project-rdbrooks-meball-jzdzilow-sridley/front/src/components/RoleSelection.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/RoleSelection.css\";\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { UserRole, userSessionState } from \"../recoil/atoms\";\n\n// adds debugging partner to queue on backend\nfunction addUserToQueue(email: string, name: string): Promise<string> {\n  return fetch(\n    \"http://localhost:3333/addDebuggingPartner?name=\" + name + \"&email=\" + email\n  )\n    .then((response) => response.json())\n    .then((data) => {\n      return data[\"result\"];\n    })\n    .catch((e) => {\n      return \"ERROR: \" + e;\n    });\n}\n\nconst RoleSelection = () => {\n  const navigate = useNavigate();\n  const [userSession, setUserSession] = useRecoilState(userSessionState);\n\n  // if no user then go to login page\n  useEffect(() => {\n    if (userSession.user === null) {\n      setUserSession({ user: null, role: UserRole.NoneSelected, time: null });\n      navigate(\"/login\");\n    }\n  }, [userSession.user]);\n\n  // student selects type of role\n  const handleRoleSelection = (role: UserRole) => {\n    setUserSession({ user: userSession.user, role: role, time: new Date() });\n    navigate(\"/dashboard\");\n    // will only get to role selection page if session started, thus do not need to check again\n    if (role === UserRole.DebuggingPartner) {\n      if (userSession.user) {\n        addUserToQueue(userSession.user.email, userSession.user.name);\n      }\n      navigate(\"/dashboard\");\n    } else if (role === UserRole.HelpRequester) {\n      // if help requester must also select type of issue (created based on user research)\n      navigate(\"/issue-type-selection\");\n      console.log(\"ROLE\" + userSession.role + \"USER \" + userSession.user);\n    }\n  };\n\n  return (\n    <div className=\"role-body\">\n      <div className=\"role-container\">\n        <h2>Welcome, {userSession.user?.name}!</h2>\n        <p>Please select your role:</p>\n        <button\n          onClick={() => handleRoleSelection(UserRole.HelpRequester)}\n          className=\"btn\"\n        >\n          Help Requester\n        </button>\n        <button\n          onClick={() => handleRoleSelection(UserRole.DebuggingPartner)}\n          className=\"btn\"\n        >\n          Debugging Partner\n        </button>\n        <button\n          className=\"btn2\"\n          onClick={() => {\n            setUserSession({\n              user: null,\n              role: UserRole.NoneSelected,\n              time: null,\n            });\n            navigate(\"/login\");\n          }}\n        >\n          Back to Login\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default RoleSelection;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}