{"ast":null,"code":"var _jsxFileName = \"/Users/zdzilowska/Desktop/university/year 2/cs0320/term-project-rdbrooks-meball-jzdzilow-sridley/front/src/components/IssueTypeSelection.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/IssueTypeSelection.css\";\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\nimport { IssueType, userSessionState, singleSessionState } from \"../recoil/atoms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction addUserToQueue(email, name, issueType) {\n  return fetch(\"http://localhost:3333/addHelpRequester?name=\" + name + \"&email=\" + email + \"&bugType=\" + issueType).then(response => response.json()).then(data => {\n    return data[\"result\"];\n  }).catch(e => {\n    return \"ERROR: \" + e;\n  });\n}\nconst IssueTypeSelection = () => {\n  _s();\n  var _userSession$user;\n  const navigate = useNavigate();\n  //const user = useRecoilValue(userState);\n  const [userSession, setUserSession] = useRecoilState(userSessionState);\n  const setSingleSessionState = useSetRecoilState(singleSessionState);\n  useEffect(() => {\n    if (userSession.user === null) {\n      console.log(\"user session null\");\n      setSingleSessionState({\n        partner: null,\n        issueType: IssueType.NoneSelected\n      });\n      navigate(\"/login\");\n    }\n  }, [userSession.user]);\n  const handleIssueSelection = async issueType => {\n    setSingleSessionState({\n      partner: null,\n      issueType: issueType\n    });\n    console.log(\"set single session state\");\n    console.log(issueType);\n    if (userSession.user) {\n      await addUserToQueue(userSession.user.email, userSession.user.name, issueType);\n    }\n    console.log(\"about to navigate to dashboard\");\n    navigate(\"/dashboard\");\n    // Do something based on the selected role (e.g., navigate to a specific page)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"issue-body\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"issue-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [(_userSession$user = userSession.user) === null || _userSession$user === void 0 ? void 0 : _userSession$user.name.split(\" \")[0], \", what do you need help with?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleIssueSelection(IssueType.Bug),\n        className: \"btn\",\n        children: \"A bug\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleIssueSelection(IssueType.ConceptualQuestion),\n        className: \"btn\",\n        children: \"A conceptual question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(IssueTypeSelection, \"fTCtC6LUfwXIK2qG3WYBXZdSmUs=\", false, function () {\n  return [useNavigate, useRecoilState, useSetRecoilState];\n});\n_c = IssueTypeSelection;\nexport default IssueTypeSelection;\nvar _c;\n$RefreshReg$(_c, \"IssueTypeSelection\");","map":{"version":3,"names":["React","useEffect","useNavigate","useRecoilState","useSetRecoilState","IssueType","userSessionState","singleSessionState","jsxDEV","_jsxDEV","addUserToQueue","email","name","issueType","fetch","then","response","json","data","catch","e","IssueTypeSelection","_s","_userSession$user","navigate","userSession","setUserSession","setSingleSessionState","user","console","log","partner","NoneSelected","handleIssueSelection","className","children","split","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Bug","ConceptualQuestion","_c","$RefreshReg$"],"sources":["/Users/zdzilowska/Desktop/university/year 2/cs0320/term-project-rdbrooks-meball-jzdzilow-sridley/front/src/components/IssueTypeSelection.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/IssueTypeSelection.css\";\nimport { useRecoilState, useSetRecoilState, useRecoilValue } from \"recoil\";\nimport {\n  IssueType,\n  userSessionState,\n  singleSessionState,\n} from \"../recoil/atoms\";\n\nfunction addUserToQueue(\n  email: string,\n  name: string,\n  issueType: string\n): Promise<string> {\n  return fetch(\n    \"http://localhost:3333/addHelpRequester?name=\" +\n      name +\n      \"&email=\" +\n      email +\n      \"&bugType=\" +\n      issueType\n  )\n    .then((response) => response.json())\n    .then((data) => {\n      return data[\"result\"];\n    })\n    .catch((e) => {\n      return \"ERROR: \" + e;\n    });\n}\n\nconst IssueTypeSelection = () => {\n  const navigate = useNavigate();\n  //const user = useRecoilValue(userState);\n  const [userSession, setUserSession] = useRecoilState(userSessionState);\n  const setSingleSessionState = useSetRecoilState(singleSessionState);\n\n  useEffect(() => {\n    if (userSession.user === null) {\n      console.log(\"user session null\");\n      setSingleSessionState({\n        partner: null,\n        issueType: IssueType.NoneSelected,\n      });\n      navigate(\"/login\");\n    }\n  }, [userSession.user]);\n\n  const handleIssueSelection = async (issueType: IssueType) => {\n    setSingleSessionState({ partner: null, issueType: issueType });\n    console.log(\"set single session state\");\n    console.log(issueType);\n    if (userSession.user) {\n      await addUserToQueue(\n        userSession.user.email,\n        userSession.user.name,\n        issueType\n      );\n    }\n    console.log(\"about to navigate to dashboard\");\n    navigate(\"/dashboard\");\n    // Do something based on the selected role (e.g., navigate to a specific page)\n  };\n\n  return (\n    <div className=\"issue-body\">\n      <div className=\"issue-container\">\n        <h2>\n          {userSession.user?.name.split(\" \")[0]}, what do you need help with?\n        </h2>\n        <button\n          onClick={() => handleIssueSelection(IssueType.Bug)}\n          className=\"btn\"\n        >\n          A bug\n        </button>\n        <button\n          onClick={() => handleIssueSelection(IssueType.ConceptualQuestion)}\n          className=\"btn\"\n        >\n          A conceptual question\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default IssueTypeSelection;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}